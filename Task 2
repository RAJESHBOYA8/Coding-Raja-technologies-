import json
import datetime

class Transaction:
    def __init__(self, category, amount, date=None):
        self.category = category
        self.amount = amount
        self.date = date or datetime.datetime.now()

    def __str__(self):
        return f"{self.date.strftime('%Y-%m-%d')} - {self.category}: ${self.amount}"


class BudgetTracker:
    def __init__(self, filename):
        self.filename = filename
        self.transactions = []
        self.load_transactions()

    def load_transactions(self):
        try:
            with open(self.filename, 'r') as file:
                self.transactions = json.load(file)
        except FileNotFoundError:
            pass

    def save_transactions(self):
        with open(self.filename, 'w') as file:
            json.dump(self.transactions, file, default=lambda x: x.__dict__)

    def add_transaction(self, transaction):
        self.transactions.append(transaction.__dict__)
        self.save_transactions()

    def calculate_remaining_budget(self, income):
        total_expenses = sum(transaction['amount'] for transaction in self.transactions if transaction['amount'] < 0)
        return income + total_expenses

    def analyze_expenses(self):
        expense_categories = {}
        for transaction in self.transactions:
            if transaction['amount'] < 0:
                category = transaction['category']
                amount = transaction['amount']
                if category in expense_categories:
                    expense_categories[category] += amount
                else:
                    expense_categories[category] = amount
        return expense_categories


def main():
    budget_tracker = BudgetTracker("transactions.json")

    while True:
        print("\n===== Budget Tracker Menu =====")
        print("1. Add Expense")
        print("2. Add Income")
        print("3. Calculate Remaining Budget")
        print("4. Analyze Expenses")
        print("5. Exit")

        choice = input("Enter your choice: ")

        if choice == '1':
            category = input("Enter expense category: ")
            amount = float(input("Enter expense amount: "))
            transaction = Transaction(category, -amount)
            budget_tracker.add_transaction(transaction)
            print("Expense added successfully!")

        elif choice == '2':
            category = input("Enter income category: ")
            amount = float(input("Enter income amount: "))
            transaction = Transaction(category, amount)
            budget_tracker.add_transaction(transaction)
            print("Income added successfully!")

        elif choice == '3':
            income = float(input("Enter total income: "))
            remaining_budget = budget_tracker.calculate_remaining_budget(income)
            print(f"Remaining Budget: ${remaining_budget}")

        elif choice == '4':
            expense_categories = budget_tracker.analyze_expenses()
            print("\n===== Expense Analysis =====")
            for category, amount in expense_categories.items():
                print(f"{category}: ${amount}")

        elif choice == '5':
            print("Exiting...")
            break

        else:
            print("Invalid choice. Please enter a valid option.")

if __name__ == "__main__":
    main()
